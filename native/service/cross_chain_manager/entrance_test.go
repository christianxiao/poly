package cross_chain_manager

import (
	"encoding/hex"
	"fmt"

	"github.com/ontio/ontology-crypto/keypair"
	"github.com/polynetwork/poly/account"
	"github.com/polynetwork/poly/common"
	"github.com/polynetwork/poly/core/genesis"
	cstates "github.com/polynetwork/poly/core/states"
	"github.com/polynetwork/poly/core/store/leveldbstore"
	"github.com/polynetwork/poly/core/store/overlaydb"
	"github.com/polynetwork/poly/core/types"
	"github.com/polynetwork/poly/native"
	ccmcom "github.com/polynetwork/poly/native/service/cross_chain_manager/common"
	"github.com/polynetwork/poly/native/service/governance/side_chain_manager"

	"github.com/polynetwork/poly/native/service/utils"
	"github.com/polynetwork/poly/native/storage"

	"testing"
)

var (
	acct     *account.Account = account.NewAccount("")
	setBKers                  = func() {
		genesis.GenesisBookkeepers = []keypair.PublicKey{acct.PublicKey}
	}
)

func NewNative(args []byte, tx *types.Transaction, db *storage.CacheDB) *native.NativeService {
	if db == nil {
		store, _ := leveldbstore.NewMemLevelDBStore()
		db = storage.NewCacheDB(overlaydb.NewOverlayDB(store))
	}
	ns, err := native.NewNativeService(db, tx, 0, 0, common.Uint256{0}, 0, args, false)
	if err != nil {
		panic(fmt.Sprintf("NewNativeService error: %+v", err))
	}
	contaractAddr, _ := hex.DecodeString("bA6F835ECAE18f5Fc5eBc074e5A0B94422a13126")
	side := &side_chain_manager.SideChain{
		Name:         "eth",
		ChainId:      2,
		BlocksToWait: 2,
		Router:       1,
		CCMCAddress:  contaractAddr,
	}
	sink := common.NewZeroCopySink(nil)
	_ = side.Serialization(sink)
	ns.GetCacheDB().Put(utils.ConcatKey(utils.SideChainManagerContractAddress, []byte(side_chain_manager.SIDE_CHAIN), utils.GetUint64Bytes(2)), cstates.GenRawStorageItem(sink.Bytes()))
	return ns
}

func SetChain(ns *native.NativeService, contractAddr string, blocksToWait uint64) {
	contaractAddr, _ := hex.DecodeString(contractAddr)
	side := &side_chain_manager.SideChain{
		Name:         "eth",
		ChainId:      2,
		BlocksToWait: blocksToWait,
		Router:       1,
		CCMCAddress:  contaractAddr,
	}
	sink := common.NewZeroCopySink(nil)
	_ = side.Serialization(sink)
	ns.GetCacheDB().Put(utils.ConcatKey(utils.SideChainManagerContractAddress, []byte(side_chain_manager.SIDE_CHAIN), utils.GetUint64Bytes(2)), cstates.GenRawStorageItem(sink.Bytes()))
}

func TestTx(t *testing.T) {
	var native *native.NativeService

	{
		param := new(ccmcom.EntranceParam)
		proof := []byte(`{"address":"0x4b61a4c0ab51b53cfabf1339bfdb7dfd27be596a","balance":"0x0","codeHash":"0xd5415eb1d2e74e08407476508707137c7e35dbf42995dd07e273c83b4c384c9d","nonce":"0x1","storageHash":"0xac92f34547c3928bff4b16a01d011cdd313f5c8658a0ebbc419d731fc96aed01","accountProof":["0xf90211a044cdba96ea41a639286789665321c82b82da3af44c13a23e89cd7d12489f275ba04f667ad4dd8b93125a461fa90cba9824de0cc6e463963f70546d34eb5d0850ada090b90837f8e344dffde14735d66fb53204b77d546b2d588013f669a6d7cbb052a03fdca5da44fdfa953009a1a393c92af32d4aba170d9d4a355c72d74ff3609ee0a0fb715e667b8ea2a486fa7664b6319f9ad70c8a02a8523ea66018c8a800796312a0e1b0607233b4eb726ec99b875021cd7a419dfa7db281509b09d5e0e586bf20e5a0e0f020646f30505c6dee185e2b15b69b41229f4a5ef3bd1b86a7640323267d0da04a9248c1e2376c795d7e7092f5f269112a5ef0ba9f615691752d327a2e14db46a09434b2e9ce4f7902049c73069aa4e06a64e1b4f66ad28886c1d2dbce4f8d8885a049723843c76c139ee6a852913a15f867bf6996efeab24093831448a3fd319060a0c76af527df045ec8841d3844f75c0df45413eb39e4d133bca4ef6b9f34c14e9ba0e1d251bed147df5615e73e38b5116b9613edfbd40148698ba37d8aaa4c96d08ea0f71d80eb8db1138d42e8ba10e4bbf752e63ba3a2e6202cf77bd139b1f2037909a0cd5faa98e3fb40080b58bafb07477761d5259293313bba9dfa2a717263cc2c6aa0a7da5f100c1ad5e1adc36cbe42b2a75b8e98e7f6ed834f17d2d986220c68dd0ea070e309eb14f7938217f161f05a3322e4334fd71216e2cc39f5581a4968f39c9a80","0xf90211a0bc3c4c601894a3e2e1f63e6a0cb8ded9a45f9d490a48d2e468fa1ef0f811c46aa0ba2c588cfaa0f80fbf358c3122d87c450e0c3c4f4f11ee666f8d373542915ff3a0df808f83f713ba243c4d1f8524de68c1321a2997fe8e90707199fe273eff9e80a0b271d852ef674361d567538ac385fcc3a64393b83e74ca5042a80561ea930f41a09e394e781d7456fec9c3eee07958624ded9f3dd33a7417e911d829f1b8a3fc2da038836c839d052cfac47eadc38eef898e81a141b861aae160b458dc2a810377fca08e0f1718e800fff19325f89e794371576d317ef69a42bc58a7d06bb22bcea109a0248d5e1d35531a8ae584f4748ba9f066b2db80b66988735c4a42ebe9fe840e32a0f85898019742452e3e6f13ab0eba8be413f703f9b6ddb738a8ffee3a5b6921cfa0d8911f2a5d448d870e75995b5d424040f639ba07a018813c6c3f4534b2a40588a0940046d1f708d0a435ae58a899dca8f0cc2b10ba37bfd5a8e1ea31d2a6e7f370a09cc6a3faaf4dbb3ec1c6a545f69ee5ea4be632edfd7da38005466de113f4fe1ea071a50ff6f949b9b7b39754857b10f8e988f378e740c917fbc47d07363f348eb0a0b1df183e8603fb1c3aad3af711d2e15696f256f5dd2c94bd88be390f13013762a018f2794476d5b40a054196c7f2aa218c508cd4f10a85f71222a7c08ab5cbd109a0f296cfcd6b516e9c8d2c1a90c5ddd8393667baf9b7fc37f7b403f3a26d36e1c080","0xf90211a0616b9d83bd7f96de1864f0fe3e16badf4dfa89b8f3eba721a46c7f232d930e5ba09e71d9854994874d673e049153c7accf44196a6211b80ef97b3d29e636db521aa048d549ac792bbf2e3f07a7362b81f8817193c446c56eb66b71abe7ca6fe5c6a5a0e120d0b4dadef4604bd8b9250ad6ca3ca6b11da171e209a566924950af03571ba067f4f8626b8af02a4b7a33e546a55845051b3b81cde0e045d4508908b27a49aaa0ed55c43c8d4ef28c54b641660d457d4e0956cc1c63a77a98f39dd5f1f185b98ca08ddcf649ac1ca8df725e021298352a5daf44f9a1caedecd9fef2bd509ae43c0ea00223058d54f8445d1e53e2586600db633ed9aba3f81fa9977fabde53fca4b4d7a0c39638566db5d144df1521afe1e7451ec1836ead2eda423443b66ec0e113de30a011a3c497474d46e16a1f15c3558d5043a994a7df3e4f7e68025f344e12e7de85a0814c5111d3853dcfb4b3008e983364d68869897ef3d246e482f5d51c97dbef10a04d1605e0a23e25bb985b83a0f9743e632c737336cdf7394c1a9a4dfee19a9168a031e6c9c8329cbe268f83da4e8eca50a20a95c28f15780d332625f51122bdd797a05c1fb1a5be55ecc86189fd3a9ea070ec9e4b9394618c9cba8ef47eb77488dc02a0220348f330a91580351ba1be5c36264497e75f6fc1ddf109c80e0069819347f2a0809145f936a7b913fc86edc2dd914b5c835b2b17a4fb2cafda62ca6d2440df3680","0xf90211a0bcef09832cca3e0d23f7ea55f6e605bd36141a362094e57a698fe5a086ab3f2ea067f569bf8e06758f39fc95fb312f808cad88dc7a62cc82937ea7214d43216fcaa02832f266942fa9a3f6b55d05f8e6f1408f6d82356a761578c7dae9408b7f0d50a0c75bd37f1e94fc6c322e3e5b50b3e36efaa626b457df7ecacb3b8e65fad53bbaa03e4ff0b64aa60e9ea8329cadb49ba89f7cad0c541d525956b7484133aa973979a0d32e95abde9c3278cf4e7a16d4edcde194410ae0ce8df4ff78c5441236d53837a07703f8673c8d74beb4e639d0a4603b9026e20fea0c6547eda433df2d9b53dc56a0fac583c68287d294eb76815bb4841b992187add002f0e563b891e71d157af33aa096c85eaa274319ced0ead3cd0054563b59a2fbf750542e5029b83a5a5ded67e2a00cf31256126ad966492d04f22dbbc70880a5dbfcf3d795842b1a1fc36684e419a0359a1ab3ca5de3682cb57bbf0d5c9959f6c964e0f7c0e99580de14108fae6d9ca03e165d0a6c4d7e02bf4f459188eb5a0ec51ee3f960eaec1a8d9efa4a25e2fd25a031444ce52cb0b9d698f314acbbea8b98ca6df2a789ba35f1af64b07989659ca7a0b6e6da13a8361f323f7391facc8a20c5af184c8e345ab2396c94c868f420653ca0259dbbb9fed067946c475cfe4919ca6ac8f089fc61aa7fbd76f3b9b8f6271617a05b2f4edce7b144f1f00fc61539ac43b772684dc1953ad3a885630cb351fc257680","0xf90211a002e5af012079123236fdb908236ea6aebaddff546e2580424101a23211fbde75a003fd741237eb90196f5822f91888074b2180d250a8ff48b41563cd94a817becca06233754ce9b2df7e1ad659e5515b042fe9007f76274f38df178ade77f5b74440a007f4b142b3b9599e91052f14872506bb1bee0b7ee70dc242d19268a0d0eeaa12a0a0b5f6499ae2ef83a1be1e3d73e4b88b3d322911457e97abb42a23758bb351d3a08e35b9b0f4ad1b5a6fbddcdacaa2463d3d4d7c8dd406ce19cd206c6595db674ba02bf200d3016a9e9eee1976618999c27abdbd63b3c5e675d64a833b1685944352a024e0583914d4ab6c6cbb5aac193b479d48ab3254ab3e88e5b6544a882dcf8933a09d7b11fa377dbf3d92f06faea40962189f388e87fad8cf0ece2196b8b30e9da4a01667268a20948d7525d576628d2ba3707a94d3b1da0ba7f28a45bba4737d2894a08c0b6a7b94d696bf5c532c613e0feb3dba82c55c4fb01134c83c319402d2b871a0026671a3a43a954d025e47e750244cf4b04a8354fde6cbea9c467368049c1feea0507b816282aefd8f3b582bd6ae7d5acb037b313debc2028e57b9cae229e1db9ca09ce3d88f7e1f321e187d1b234c2493e81b5d7b47ad6f0cb0bfd1c9ac5e5f74a6a092c2f1e2ce6ea1015f77d98c0072e7ec9b1e18406b0ba41cff9c1cdae71c9542a0b34ec209c27899ca2b1ea2d07361ea00628d28e53414dd6bfa39c39cb7eaf23e80","0xf90191a07fe5ff2aa391a7ea09ac6d55f4621aaf23cb322e559c110f3bc3c7eb3eda7a8ca0230e6812eb0e8bba2ad95edc695412e33e85539d0eab1e96968bab9f9f1f019c80a0d28dd1d2320e9e15e8bef5636e8d3e2c9b32d9c1475c78e4a435bcd3e19b812aa07a33a6998479f52a1d7c06d675a6e876c68727a61caa34e39115f03efb3afc1280a0dd4290c3837afd01faa42f458e0486bbfc4885b57b5c835f0ee6fcf55b21a394a00f07b81acd0335f3263af89f877e72bd60a5b2b5bb3e0d6d8cbf5f5f5f85ce16a0e338a2c0be8577567cb62a6d58a95d8f59a5ff1b2711f75bb31ccc094bf7aaafa0d5b82a1d9af21fee4199b9867316f027f9af7d3773e1710ce7d200a93c67fef8a023963250bd9f8e7a05e57c71bbeeb1c2543777aad8175579d4a285eb966e2cf580a0619d3a8d0f12f692c9cb482d18f6d89b9f4dc4387f1a5c3d5695a58e169c6aeaa026047caa832100fdac0ade771d2559e4b250c1ebd4d3f2c58ce3ffb8a73a3a54a0aa24cea6d585f51e7363e9188e0ceca15a2fcf8ef7b06ffb8a244e38444893ab8080","0xf8679e20a156fa491379eaedeba66e5a505622acecbf4ba5671e47f00370827178b846f8440180a0ac92f34547c3928bff4b16a01d011cdd313f5c8658a0ebbc419d731fc96aed01a0d5415eb1d2e74e08407476508707137c7e35dbf42995dd07e273c83b4c384c9d"],"storageProof":[{"key":"0x50a82f9cbcdfaca82fe46b4a494d325ee6dc33d1fa55b218ab142e6cc2c8a58b","value":"0x2d37cc264865ae01b30172c43ac9ace29ba1dee20f10aa74ce291b26689c050b","proof":["0xf90211a0b07d4dbb8e1e7f7357496c011b008c5a49531e90725e1957d769dc720fcbd8d7a0172557790331f25ff2b5aada1d25bddf0fda4ea790a40ef0e596a45fe173b1e6a0e312e10d94bd7dad39723078aba881d4235043bc3c1ab59f44cea61c0e56a1b7a04d0c28f3e08dd98e7ea6597fbe6c604592c7f2359db9bc42bf3e4b8bf42459c5a0f1562a82dbc1994119ea29a65f255eda43959309171b4606f4011cafd0173ac2a01fc25384137fa860cb740f1811cea39bd6a5c86f52d45ad6d3a00b40f60d444aa089f45efd567de9edc6a8bfa4bc8684dc4118833a51a5f20d6d7c0e719586a909a06b6d587b1aa7fc7d81a56bc9cd20d621a1772c814cccc873692572bca93106d4a03d51ba86ef58614506f4c4425eda5692e71a818171a669dcaee5ea10f3902e38a09566b3631d046edda78a244db59304ccd8cea8287d23dcd0d03a77fcd60a0c1aa097c7251c12165854304785062c881394e9eeacc9bb55dd08a9331730bcae2711a0f677cebfff0adfd030227685d7c231fc9c8ecedb8b0fa62250948ff6f895efa9a0106b34679f06a804b941370b81bb6d68e79505a387a49dcd236a0a88063aa527a0579f36e4d3ae280c83851cb791e4ee75d80d832762e95275a15c1ae33657d9ffa0b7ca9f6e6fd1d25fbd44ced8561c290c3cabbf2891b4b8289ca54d671e887430a05177446b71571d22b976133f873355c383667a2d60e1ca3ebd882854a7aac8f580","0xf90191a0525d0baab303e971a33085929b03ad88fe97a9c2ab92480a4d09720599581c11a0e783b08ecb0ae24cbcb1804bc4f422557bce71f077adf4edf7c275a745ed5b2a8080a0c310a228b83f5310ca38b83415b7113ce621743b74fbbeb907944115859dbb4ca0085b66671b0eb402d360bfe181b2cb883720167bd782bf4bbdf920998a001414a05ee03832f17957b631b15db06fa7bdf3b8f0cd1c61d27af684ca60bd15e041bca0a4dae0acbd7fe8b71b48f520fef3c35b946cdce186b76e675595ddbbedb59363a0f81d3a61a2a23dc07866ea1ccaafb4368da835809cc7159ce8703ac8ead6cdcca046d79da3f2ac115f3da3e0cb95a77e778da969b02aa20a8841907a3fd4e1076f80a0e1d17b106cd31499d9700b73d5f8b5c5bdc02835ccc0486dc9d4d0b834de8a1980a0d860e04becc55860efa5f851d389d43d40177caa56f6244e0213ff58ecfdf53aa0dbb6dfc13a9106cf6aed1840f26a4a41ed9ad97b7f87e09cc1eb10beaee87092a0e974b76e9fd2af46966cbdf4aad7fb986b68ce470a660f6ac37d393149b99dbb80","0xf843a02038fd5b02a17455a63e08ef8acf42f0c690bb3323f43c6cfc048729c3a46670a1a02d37cc264865ae01b30172c43ac9ace29ba1dee20f10aa74ce291b26689c050b"]}]}`)
		value, _ := hex.DecodeString("20000000000000000000000000000000000000000000000000000000000000001320000000000000000000000000000000000000000000000000000000000000001314662e1b7ba042f389cb1b26c4d988e137d540fc4301000000000000000362746306756e6c6f636bfd1d01226d6a456f79794350734c7a4a3233784d58364d746931337a4d794e33366b7a6e353740420f0000000000f15521023ac710e73e1410718530b2686ce47f12fa3c470a9eb6085976b70b01c64c9f732102c9dc4d8f419e325bbef0fe039ed6feaf2079a2ef7b27336ddb79be2ea6e334bf2102eac939f2f0873894d8bf0ef2f8bbdd32e4290cbf9632b59dee743529c0af9e802103378b4a3854c88cca8bfed2558e9875a144521df4a75ab37a206049ccef12be692103495a81957ce65e3359c114e6c2fe9f97568be491e3f24d6fa66cc542e360cd662102d43e29299971e802160a92cfcd4037e8ae83fb8f6af138684bebdc5686f3b9db21031e415c04cbc9b81fbee6e04d8c902e8f61109a2c9883a959ba528c52698c055a57ae")
		param.SourceChainID = 2
		param.Height = 7259464
		param.Proof = proof
		param.RelayerAddress = acct.Address[:]
		param.Extra = value
		param.HeaderOrCrossChainMsg = []byte{}
		sink := common.NewZeroCopySink(nil)
		param.Serialization(sink)

		native = NewNative(sink.Bytes(), &types.Transaction{ChainID: 0}, nil)
		SetChain(native, "4b61a4c0ab51b53cfabf1339bfdb7dfd27be596a", 1)

		d, err := ImportExTransfer(native)
		if err != nil {
			fmt.Printf("%v", err)
		}
		fmt.Printf("%s", hex.EncodeToString(d))
	}

}
